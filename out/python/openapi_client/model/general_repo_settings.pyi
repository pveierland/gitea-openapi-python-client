# coding: utf-8

"""
    Gitea API.

    This documentation describes the Gitea API.  # noqa: E501

    The version of the OpenAPI document: 1.19.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class GeneralRepoSettings(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    GeneralRepoSettings contains global repository settings exposed by API
    """


    class MetaOapg:
        
        class properties:
            http_git_disabled = schemas.BoolSchema
            lfs_disabled = schemas.BoolSchema
            migrations_disabled = schemas.BoolSchema
            mirrors_disabled = schemas.BoolSchema
            stars_disabled = schemas.BoolSchema
            time_tracking_disabled = schemas.BoolSchema
            __annotations__ = {
                "http_git_disabled": http_git_disabled,
                "lfs_disabled": lfs_disabled,
                "migrations_disabled": migrations_disabled,
                "mirrors_disabled": mirrors_disabled,
                "stars_disabled": stars_disabled,
                "time_tracking_disabled": time_tracking_disabled,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["http_git_disabled"]) -> MetaOapg.properties.http_git_disabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lfs_disabled"]) -> MetaOapg.properties.lfs_disabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["migrations_disabled"]) -> MetaOapg.properties.migrations_disabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mirrors_disabled"]) -> MetaOapg.properties.mirrors_disabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stars_disabled"]) -> MetaOapg.properties.stars_disabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["time_tracking_disabled"]) -> MetaOapg.properties.time_tracking_disabled: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["http_git_disabled", "lfs_disabled", "migrations_disabled", "mirrors_disabled", "stars_disabled", "time_tracking_disabled", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["http_git_disabled"]) -> typing.Union[MetaOapg.properties.http_git_disabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lfs_disabled"]) -> typing.Union[MetaOapg.properties.lfs_disabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["migrations_disabled"]) -> typing.Union[MetaOapg.properties.migrations_disabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mirrors_disabled"]) -> typing.Union[MetaOapg.properties.mirrors_disabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stars_disabled"]) -> typing.Union[MetaOapg.properties.stars_disabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["time_tracking_disabled"]) -> typing.Union[MetaOapg.properties.time_tracking_disabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["http_git_disabled", "lfs_disabled", "migrations_disabled", "mirrors_disabled", "stars_disabled", "time_tracking_disabled", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        http_git_disabled: typing.Union[MetaOapg.properties.http_git_disabled, bool, schemas.Unset] = schemas.unset,
        lfs_disabled: typing.Union[MetaOapg.properties.lfs_disabled, bool, schemas.Unset] = schemas.unset,
        migrations_disabled: typing.Union[MetaOapg.properties.migrations_disabled, bool, schemas.Unset] = schemas.unset,
        mirrors_disabled: typing.Union[MetaOapg.properties.mirrors_disabled, bool, schemas.Unset] = schemas.unset,
        stars_disabled: typing.Union[MetaOapg.properties.stars_disabled, bool, schemas.Unset] = schemas.unset,
        time_tracking_disabled: typing.Union[MetaOapg.properties.time_tracking_disabled, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GeneralRepoSettings':
        return super().__new__(
            cls,
            *_args,
            http_git_disabled=http_git_disabled,
            lfs_disabled=lfs_disabled,
            migrations_disabled=migrations_disabled,
            mirrors_disabled=mirrors_disabled,
            stars_disabled=stars_disabled,
            time_tracking_disabled=time_tracking_disabled,
            _configuration=_configuration,
            **kwargs,
        )
