# coding: utf-8

"""
    Gitea API.

    This documentation describes the Gitea API.  # noqa: E501

    The version of the OpenAPI document: 1.19.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class GeneralAttachmentSettings(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    GeneralAttachmentSettings contains global Attachment settings exposed by API
    """


    class MetaOapg:
        
        class properties:
            allowed_types = schemas.StrSchema
            enabled = schemas.BoolSchema
            max_files = schemas.Int64Schema
            max_size = schemas.Int64Schema
            __annotations__ = {
                "allowed_types": allowed_types,
                "enabled": enabled,
                "max_files": max_files,
                "max_size": max_size,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allowed_types"]) -> MetaOapg.properties.allowed_types: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enabled"]) -> MetaOapg.properties.enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["max_files"]) -> MetaOapg.properties.max_files: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["max_size"]) -> MetaOapg.properties.max_size: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["allowed_types", "enabled", "max_files", "max_size", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allowed_types"]) -> typing.Union[MetaOapg.properties.allowed_types, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enabled"]) -> typing.Union[MetaOapg.properties.enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["max_files"]) -> typing.Union[MetaOapg.properties.max_files, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["max_size"]) -> typing.Union[MetaOapg.properties.max_size, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["allowed_types", "enabled", "max_files", "max_size", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        allowed_types: typing.Union[MetaOapg.properties.allowed_types, str, schemas.Unset] = schemas.unset,
        enabled: typing.Union[MetaOapg.properties.enabled, bool, schemas.Unset] = schemas.unset,
        max_files: typing.Union[MetaOapg.properties.max_files, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        max_size: typing.Union[MetaOapg.properties.max_size, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GeneralAttachmentSettings':
        return super().__new__(
            cls,
            *_args,
            allowed_types=allowed_types,
            enabled=enabled,
            max_files=max_files,
            max_size=max_size,
            _configuration=_configuration,
            **kwargs,
        )
